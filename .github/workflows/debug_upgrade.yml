name: "sync_github_release_to_r2"

on:
  push:
    branches:
      - upgrade_link2

jobs:
  sync-to-r2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version variable
        id: set_version
        run: |
          # You can set the version here or extract it from somewhere
          VERSION="0.5.8"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Configure AWS CLI for R2
        env:
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
        run: |
          # Update AWS CLI (if installed)
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

          # Configure R2 access
          aws configure set aws_access_key_id "$R2_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$R2_SECRET_ACCESS_KEY"
          aws configure set default.region auto
          aws configure set default.output json

      - name: Download files from GitHub Release
        run: |
          # Create temporary directory
          mkdir -p release_assets
          cd release_assets

          # Define file list
          FILES=(
            "latest.json"
            "zditor-${{ steps.set_version.outputs.version }}-1.x86_64.rpm"
            "zditor_${{ steps.set_version.outputs.version }}_aarch64.dmg"
            "zditor_${{ steps.set_version.outputs.version }}_amd64.AppImage"
            "zditor_${{ steps.set_version.outputs.version }}_amd64.AppImage.sig"
            "zditor_${{ steps.set_version.outputs.version }}_amd64.deb"
            "zditor_${{ steps.set_version.outputs.version }}_x64-setup.exe"
            "zditor_${{ steps.set_version.outputs.version }}_x64-setup.exe.sig"
            "zditor_${{ steps.set_version.outputs.version }}_x64.dmg"
            "zditor_${{ steps.set_version.outputs.version }}_x64_en-US.msi"
            "zditor_${{ steps.set_version.outputs.version }}_x64_en-US.msi.sig"
            "zditor_aarch64.app.tar.gz"
            "zditor_aarch64.app.tar.gz.sig"
            "zditor_x64.app.tar.gz"
            "zditor_x64.app.tar.gz.sig"
          )

          # Download each file from GitHub Release
          for FILE in "${FILES[@]}"; do
            echo "Downloading $FILE..."
            curl -L -O "https://github.com/zditor/zditor-docs/releases/download/zditor-v${{ steps.set_version.outputs.version }}/${FILE}" || echo "Failed to download $FILE"
          done

          # Verify downloaded files
          ls -lh

      - name: Upload to R2
        env:
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
        run: |
          cd release_assets

          # Upload all files to R2
          for FILE in *; do
            if [ -f "$FILE" ]; then
              echo "Uploading $FILE to R2..."
              aws s3 cp \
                --endpoint-url "https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com" \
                "${FILE}" \
                "s3://${R2_BUCKET_NAME}/zditor-v${{ steps.set_version.outputs.version }}/${FILE}"
            else
              echo "Skipping $FILE (not a file)"
            fi
          done

          echo "All files uploaded to:"
          echo "https://${R2_BUCKET_NAME}.${R2_ACCOUNT_ID}.r2.cloudflarestorage.com/zditor-v${{ steps.set_version.outputs.version }}/"