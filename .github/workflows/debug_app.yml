name: "build_zditor"

on:
  workflow_dispatch:
    inputs:
      commit_id:
        description: "zditor commit id"
        required: true
        default: ""
  push:
    branches:
      - add_debug
jobs:
  debug-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
    runs-on: ${{ matrix.platform }}
    steps:
      # 使用 GitHub token 访问私有仓库
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.REPO }} # 替换为私有仓库的实际路径
          token: ${{ secrets.DEPLOY_TOKEN }} # 使用 GitHub 提供的 GITHUB_TOKEN 进行身份验证
          ref: ${{ github.event.inputs.commit_id || 'debug_empty' }}
          
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'x86_64-apple-darwin' || '' }}

      - name: install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: build
        run: |
          npm run tauri build
      - name: Upload DMG artifact
        if: ${{ matrix.platform == 'macos-latest' }}  # 确保只在 macOS 平台执行
        uses: actions/upload-artifact@v4
        with:
          name: zditor-dmg
          path: src-tauri/target/release/bundle/dmg/*.dmg
          retention-days: 400
          overwrite: true